===================================
How to use ``3-say_my_name`` module
===================================

This module defines a function ``say_my_name(first_name, last_name="")``
that prints My name is <first name> <last name>.

Usage: ``say_my_name(first_name, last_name)`` | ``say_my_name(first_name)``
=====

`first_name` and `last_name` must be of type string.
Atleast `first_name` must always be provided.

Examples with successfull tests
===============================

::  import the module.
>>> say_my_name = __import__('3-say_my_name').say_my_name

>>> say_my_name("Jon")
My name is Jon 

>>> say_my_name("Snow")
My name is Snow 

>>> say_my_name("DJ", "Khalid")
My name is DJ Khalid

Examples with Exceptions
========================

>>> say_my_name(0)
Traceback (most recent call last):
TypeError: first_name must be a string

>>> say_my_name("Pi", 3.142)
Traceback (most recent call last):
TypeError: last_name must be a string

>> say_my_name(None)
Traceback (most recent call last):
TypeError: first_name must be a string

>> say_my_name("NULL", None)
Traceback (most recent call last):
TypeError: last_name must be a string

>>> say_my_name([])
Traceback (most recent call last):
TypeError: first_name must be a string

>>> say_my_name("Tyrion", "The Imp", "Lannister")
... #doctest: +NORMALIZE_WHITESPACE
Traceback (most recent call last):
TypeError: say_my_name() takes from 1 to 2 positional arguments
    but 3 were given

>>> say_my_name() #doctest: +NORMALIZE_WHITESPACE
Traceback (most recent call last):
TypeError: say_my_name() missing 1 required 
    positional argument: 'first_name'